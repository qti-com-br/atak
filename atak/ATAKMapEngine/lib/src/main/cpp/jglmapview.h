/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_atakmap_map_opengl_GLMapView */

#ifndef _Included_com_atakmap_map_opengl_GLMapView
#define _Included_com_atakmap_map_opengl_GLMapView
#ifdef __cplusplus
extern "C" {
#endif
#undef com_atakmap_map_opengl_GLMapView_ENABLED_COLLIDE_RADIUS
#define com_atakmap_map_opengl_GLMapView_ENABLED_COLLIDE_RADIUS 10.0
#undef com_atakmap_map_opengl_GLMapView_DISABLED_COLLIDE_RADIUS
#define com_atakmap_map_opengl_GLMapView_DISABLED_COLLIDE_RADIUS 0.0
#undef com_atakmap_map_opengl_GLMapView_INVERSE_MODE_ABSOLUTE
#define com_atakmap_map_opengl_GLMapView_INVERSE_MODE_ABSOLUTE 0L
#undef com_atakmap_map_opengl_GLMapView_INVERSE_MODE_TERRAIN
#define com_atakmap_map_opengl_GLMapView_INVERSE_MODE_TERRAIN 1L
#undef com_atakmap_map_opengl_GLMapView_INVERSE_MODE_MODEL
#define com_atakmap_map_opengl_GLMapView_INVERSE_MODE_MODEL 2L
#undef com_atakmap_map_opengl_GLMapView_CAMERA_COLLISION_IGNORE
#define com_atakmap_map_opengl_GLMapView_CAMERA_COLLISION_IGNORE 0L
#undef com_atakmap_map_opengl_GLMapView_CAMERA_COLLISION_ADJUST_CAMERA
#define com_atakmap_map_opengl_GLMapView_CAMERA_COLLISION_ADJUST_CAMERA 1L
#undef com_atakmap_map_opengl_GLMapView_CAMERA_COLLISION_ADJUST_FOCUS
#define com_atakmap_map_opengl_GLMapView_CAMERA_COLLISION_ADJUST_FOCUS 2L
#undef com_atakmap_map_opengl_GLMapView_CAMERA_COLLISION_ABORT
#define com_atakmap_map_opengl_GLMapView_CAMERA_COLLISION_ABORT 3L
#undef com_atakmap_map_opengl_GLMapView_IMPL_IFACE
#define com_atakmap_map_opengl_GLMapView_IMPL_IFACE 0L
#undef com_atakmap_map_opengl_GLMapView_IMPL_V1
#define com_atakmap_map_opengl_GLMapView_IMPL_V1 1L
#undef com_atakmap_map_opengl_GLMapView_IMPL_V2
#define com_atakmap_map_opengl_GLMapView_IMPL_V2 2L
#undef com_atakmap_map_opengl_GLMapView_RENDER_PASS_SURFACE
#define com_atakmap_map_opengl_GLMapView_RENDER_PASS_SURFACE 1L
#undef com_atakmap_map_opengl_GLMapView_RENDER_PASS_SPRITES
#define com_atakmap_map_opengl_GLMapView_RENDER_PASS_SPRITES 2L
#undef com_atakmap_map_opengl_GLMapView_RENDER_PASS_SCENES
#define com_atakmap_map_opengl_GLMapView_RENDER_PASS_SCENES 4L
#undef com_atakmap_map_opengl_GLMapView_RENDER_PASS_UI
#define com_atakmap_map_opengl_GLMapView_RENDER_PASS_UI 8L
#undef com_atakmap_map_opengl_GLMapView_RENDER_PASS_SURFACE2
#define com_atakmap_map_opengl_GLMapView_RENDER_PASS_SURFACE2 16L
#undef com_atakmap_map_opengl_GLMapView_MATCH_SURFACE
#define com_atakmap_map_opengl_GLMapView_MATCH_SURFACE -1L
#undef com_atakmap_map_opengl_GLMapView__EPSILON
#define com_atakmap_map_opengl_GLMapView__EPSILON 1.0E-4
#undef com_atakmap_map_opengl_GLMapView__EPSILON_F
#define com_atakmap_map_opengl_GLMapView__EPSILON_F 0.01
#undef com_atakmap_map_opengl_GLMapView_depthEnabled
#define com_atakmap_map_opengl_GLMapView_depthEnabled 1L
#undef com_atakmap_map_opengl_GLMapView_recommendedGridSampleDistance
#define com_atakmap_map_opengl_GLMapView_recommendedGridSampleDistance 0.125
#undef com_atakmap_map_opengl_GLMapView_elevationOffset
#define com_atakmap_map_opengl_GLMapView_elevationOffset 0.0
/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    destruct
 * Signature: (Lcom/atakmap/interop/Pointer;)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_opengl_GLMapView_destruct
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    create
 * Signature: (JJIIIIZ)Lcom/atakmap/interop/Pointer;
 */
JNIEXPORT jobject JNICALL Java_com_atakmap_map_opengl_GLMapView_create
  (JNIEnv *, jclass, jlong, jlong, jint, jint, jint, jint, jboolean);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    render
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_opengl_GLMapView_render
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    release
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_opengl_GLMapView_release
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    setBaseMap
 * Signature: (JLcom/atakmap/map/opengl/GLMapRenderable2;)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_opengl_GLMapView_setBaseMap
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    sync
 * Signature: (JLcom/atakmap/map/opengl/GLMapView;Z)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_opengl_GLMapView_sync
  (JNIEnv *, jclass, jlong, jobject, jboolean);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    start
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_opengl_GLMapView_start
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    stop
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_opengl_GLMapView_stop
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    intern
 * Signature: (Lcom/atakmap/map/opengl/GLMapView;)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_opengl_GLMapView_intern
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    markDirty
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_opengl_GLMapView_markDirty__J
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    markDirty
 * Signature: (JDDDDZ)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_opengl_GLMapView_markDirty__JDDDDZ
  (JNIEnv *, jclass, jlong, jdouble, jdouble, jdouble, jdouble, jboolean);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    enableDrawMode
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_opengl_GLMapView_enableDrawMode
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    disableDrawMode
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_opengl_GLMapView_disableDrawMode
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    isDrawModeEnabled
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_com_atakmap_map_opengl_GLMapView_isDrawModeEnabled
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    getDrawModeColor
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_com_atakmap_map_opengl_GLMapView_getDrawModeColor
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    setDrawModeColor
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_opengl_GLMapView_setDrawModeColor
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    getSurfaceBounds
 * Signature: (JLjava/util/Collection;)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_opengl_GLMapView_getSurfaceBounds
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    getTerrainMeshElevation
 * Signature: (JDDI)D
 */
JNIEXPORT jdouble JNICALL Java_com_atakmap_map_opengl_GLMapView_getTerrainMeshElevation
  (JNIEnv *, jclass, jlong, jdouble, jdouble, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    intersectWithTerrain2
 * Signature: (JJFFLcom/atakmap/coremap/maps/coords/GeoPoint;I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_atakmap_map_opengl_GLMapView_intersectWithTerrain2
  (JNIEnv *, jclass, jlong, jlong, jfloat, jfloat, jobject, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    getTerrainTiles
 * Signature: (JLjava/util/Collection;I)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_opengl_GLMapView_getTerrainTiles
  (JNIEnv *, jclass, jlong, jobject, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    getTerrainVersion
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_com_atakmap_map_opengl_GLMapView_getTerrainVersion
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    getTerrainRenderService
 * Signature: (JI)Lcom/atakmap/interop/Pointer;
 */
JNIEXPORT jobject JNICALL Java_com_atakmap_map_opengl_GLMapView_getTerrainRenderService
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    forwardD
 * Signature: (JJIJII)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_opengl_GLMapView_forwardD
  (JNIEnv *, jclass, jlong, jlong, jint, jlong, jint, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    forwardF
 * Signature: (JJIJII)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_opengl_GLMapView_forwardF
  (JNIEnv *, jclass, jlong, jlong, jint, jlong, jint, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    estimateResolutionFromViewAABB
 * Signature: (JDDDDLcom/atakmap/coremap/maps/coords/GeoPoint;)D
 */
JNIEXPORT jdouble JNICALL Java_com_atakmap_map_opengl_GLMapView_estimateResolutionFromViewAABB
  (JNIEnv *, jclass, jlong, jdouble, jdouble, jdouble, jdouble, jobject);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    estimateResolutionFromModelAABB
 * Signature: (JDDDDLcom/atakmap/coremap/maps/coords/GeoPoint;)D
 */
JNIEXPORT jdouble JNICALL Java_com_atakmap_map_opengl_GLMapView_estimateResolutionFromModelAABB
  (JNIEnv *, jclass, jlong, jdouble, jdouble, jdouble, jdouble, jobject);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    estimateResolutionFromViewSphere
 * Signature: (JDDDDLcom/atakmap/coremap/maps/coords/GeoPoint;)D
 */
JNIEXPORT jdouble JNICALL Java_com_atakmap_map_opengl_GLMapView_estimateResolutionFromViewSphere
  (JNIEnv *, jclass, jlong, jdouble, jdouble, jdouble, jdouble, jobject);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    estimateResolutionFromModelSphere
 * Signature: (JDDDDLcom/atakmap/coremap/maps/coords/GeoPoint;)D
 */
JNIEXPORT jdouble JNICALL Java_com_atakmap_map_opengl_GLMapView_estimateResolutionFromModelSphere
  (JNIEnv *, jclass, jlong, jdouble, jdouble, jdouble, jdouble, jobject);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    set_terrainBlendFactor
 * Signature: (JFI)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_opengl_GLMapView_set_1terrainBlendFactor
  (JNIEnv *, jclass, jlong, jfloat, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    set_targeting
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_opengl_GLMapView_set_1targeting
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    get_targeting
 * Signature: (JZ)Z
 */
JNIEXPORT jboolean JNICALL Java_com_atakmap_map_opengl_GLMapView_get_1targeting
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    get_crossesIDL
 * Signature: (JZ)Z
 */
JNIEXPORT jboolean JNICALL Java_com_atakmap_map_opengl_GLMapView_get_1crossesIDL
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    get_settled
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_atakmap_map_opengl_GLMapView_get_1settled
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    get_rigorousRegistrationResolutionEnabled
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_atakmap_map_opengl_GLMapView_get_1rigorousRegistrationResolutionEnabled
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    get_terrainBlendEnabled
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_atakmap_map_opengl_GLMapView_get_1terrainBlendEnabled
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    get_continuousScrollEnabled
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_atakmap_map_opengl_GLMapView_get_1continuousScrollEnabled
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    get_multiPartPass
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_atakmap_map_opengl_GLMapView_get_1multiPartPass
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    getDisplayMode
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_atakmap_map_opengl_GLMapView_getDisplayMode
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    setDisplayMode
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_opengl_GLMapView_setDisplayMode
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    lookAt
 * Signature: (JDDDDDDDIZI)Z
 */
JNIEXPORT jboolean JNICALL Java_com_atakmap_map_opengl_GLMapView_lookAt
  (JNIEnv *, jclass, jlong, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jint, jboolean, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    getMapSceneModel
 * Signature: (JZZI)Lcom/atakmap/interop/Pointer;
 */
JNIEXPORT jobject JNICALL Java_com_atakmap_map_opengl_GLMapView_getMapSceneModel
  (JNIEnv *, jclass, jlong, jboolean, jboolean, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    isAnimating
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_atakmap_map_opengl_GLMapView_isAnimating
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    setFocusPointOffset
 * Signature: (JFFI)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_opengl_GLMapView_setFocusPointOffset
  (JNIEnv *, jclass, jlong, jfloat, jfloat, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    getFocusPointOffsetX
 * Signature: (JI)F
 */
JNIEXPORT jfloat JNICALL Java_com_atakmap_map_opengl_GLMapView_getFocusPointOffsetX
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    getFocusPointOffsetY
 * Signature: (JI)F
 */
JNIEXPORT jfloat JNICALL Java_com_atakmap_map_opengl_GLMapView_getFocusPointOffsetY
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    setDisplayDpi
 * Signature: (JDI)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_opengl_GLMapView_setDisplayDpi
  (JNIEnv *, jclass, jlong, jdouble, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    setSize
 * Signature: (JIII)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_opengl_GLMapView_setSize
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    inverse
 * Signature: (JDDDILcom/atakmap/coremap/maps/coords/GeoPoint;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_atakmap_map_opengl_GLMapView_inverse
  (JNIEnv *, jclass, jlong, jdouble, jdouble, jdouble, jint, jobject);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    getElevationExaggerationFactor
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_com_atakmap_map_opengl_GLMapView_getElevationExaggerationFactor
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    setElevationExaggerationFactor
 * Signature: (JDI)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_opengl_GLMapView_setElevationExaggerationFactor
  (JNIEnv *, jclass, jlong, jdouble, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    setRenderDiagnosticsEnabled
 * Signature: (JZI)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_opengl_GLMapView_setRenderDiagnosticsEnabled
  (JNIEnv *, jclass, jlong, jboolean, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    isRenderDiagnosticsEnabled
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_com_atakmap_map_opengl_GLMapView_isRenderDiagnosticsEnabled
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    addRenderDiagnostic
 * Signature: (JLjava/lang/String;I)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_opengl_GLMapView_addRenderDiagnostic
  (JNIEnv *, jclass, jlong, jstring, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    setAtmosphereEnabled
 * Signature: (JZI)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_opengl_GLMapView_setAtmosphereEnabled
  (JNIEnv *, jclass, jlong, jboolean, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView
 * Method:    isAtmosphereEnabled
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_com_atakmap_map_opengl_GLMapView_isAtmosphereEnabled
  (JNIEnv *, jclass, jlong, jint);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class com_atakmap_map_opengl_GLMapView_OsrUtils */

#ifndef _Included_com_atakmap_map_opengl_GLMapView_OsrUtils
#define _Included_com_atakmap_map_opengl_GLMapView_OsrUtils
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_atakmap_map_opengl_GLMapView_OsrUtils
 * Method:    createProjection
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_com_atakmap_map_opengl_GLMapView_00024OsrUtils_createProjection
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView_OsrUtils
 * Method:    destroyProjection
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_opengl_GLMapView_00024OsrUtils_destroyProjection
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_atakmap_map_opengl_GLMapView_OsrUtils
 * Method:    forwardImplF
 * Signature: (ILjava/nio/FloatBuffer;ILjava/nio/FloatBuffer;II)I
 */
JNIEXPORT jint JNICALL Java_com_atakmap_map_opengl_GLMapView_00024OsrUtils_forwardImplF__ILjava_nio_FloatBuffer_2ILjava_nio_FloatBuffer_2II
  (JNIEnv *, jclass, jint, jobject, jint, jobject, jint, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView_OsrUtils
 * Method:    forwardImplD
 * Signature: (ILjava/nio/DoubleBuffer;ILjava/nio/FloatBuffer;II)I
 */
JNIEXPORT jint JNICALL Java_com_atakmap_map_opengl_GLMapView_00024OsrUtils_forwardImplD__ILjava_nio_DoubleBuffer_2ILjava_nio_FloatBuffer_2II
  (JNIEnv *, jclass, jint, jobject, jint, jobject, jint, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView_OsrUtils
 * Method:    forwardImplF
 * Signature: (I[DLjava/nio/FloatBuffer;ILjava/nio/FloatBuffer;II)I
 */
JNIEXPORT jint JNICALL Java_com_atakmap_map_opengl_GLMapView_00024OsrUtils_forwardImplF__I_3DLjava_nio_FloatBuffer_2ILjava_nio_FloatBuffer_2II
  (JNIEnv *, jclass, jint, jdoubleArray, jobject, jint, jobject, jint, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView_OsrUtils
 * Method:    forwardImplD
 * Signature: (I[DLjava/nio/DoubleBuffer;ILjava/nio/FloatBuffer;II)I
 */
JNIEXPORT jint JNICALL Java_com_atakmap_map_opengl_GLMapView_00024OsrUtils_forwardImplD__I_3DLjava_nio_DoubleBuffer_2ILjava_nio_FloatBuffer_2II
  (JNIEnv *, jclass, jint, jdoubleArray, jobject, jint, jobject, jint, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView_OsrUtils
 * Method:    forwardImplF
 * Signature: (ILjava/nio/DoubleBuffer;Ljava/nio/FloatBuffer;ILjava/nio/FloatBuffer;II)I
 */
JNIEXPORT jint JNICALL Java_com_atakmap_map_opengl_GLMapView_00024OsrUtils_forwardImplF__ILjava_nio_DoubleBuffer_2Ljava_nio_FloatBuffer_2ILjava_nio_FloatBuffer_2II
  (JNIEnv *, jclass, jint, jobject, jobject, jint, jobject, jint, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView_OsrUtils
 * Method:    forwardImplD
 * Signature: (ILjava/nio/DoubleBuffer;Ljava/nio/DoubleBuffer;ILjava/nio/FloatBuffer;II)I
 */
JNIEXPORT jint JNICALL Java_com_atakmap_map_opengl_GLMapView_00024OsrUtils_forwardImplD__ILjava_nio_DoubleBuffer_2Ljava_nio_DoubleBuffer_2ILjava_nio_FloatBuffer_2II
  (JNIEnv *, jclass, jint, jobject, jobject, jint, jobject, jint, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView_OsrUtils
 * Method:    forwardImplF
 * Signature: (JLjava/nio/FloatBuffer;ILjava/nio/FloatBuffer;II)I
 */
JNIEXPORT jint JNICALL Java_com_atakmap_map_opengl_GLMapView_00024OsrUtils_forwardImplF__JLjava_nio_FloatBuffer_2ILjava_nio_FloatBuffer_2II
  (JNIEnv *, jclass, jlong, jobject, jint, jobject, jint, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView_OsrUtils
 * Method:    forwardImplD
 * Signature: (JLjava/nio/DoubleBuffer;ILjava/nio/FloatBuffer;II)I
 */
JNIEXPORT jint JNICALL Java_com_atakmap_map_opengl_GLMapView_00024OsrUtils_forwardImplD__JLjava_nio_DoubleBuffer_2ILjava_nio_FloatBuffer_2II
  (JNIEnv *, jclass, jlong, jobject, jint, jobject, jint, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView_OsrUtils
 * Method:    forwardImplF
 * Signature: (J[DLjava/nio/FloatBuffer;ILjava/nio/FloatBuffer;II)I
 */
JNIEXPORT jint JNICALL Java_com_atakmap_map_opengl_GLMapView_00024OsrUtils_forwardImplF__J_3DLjava_nio_FloatBuffer_2ILjava_nio_FloatBuffer_2II
  (JNIEnv *, jclass, jlong, jdoubleArray, jobject, jint, jobject, jint, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView_OsrUtils
 * Method:    forwardImplD
 * Signature: (J[DLjava/nio/DoubleBuffer;ILjava/nio/FloatBuffer;II)I
 */
JNIEXPORT jint JNICALL Java_com_atakmap_map_opengl_GLMapView_00024OsrUtils_forwardImplD__J_3DLjava_nio_DoubleBuffer_2ILjava_nio_FloatBuffer_2II
  (JNIEnv *, jclass, jlong, jdoubleArray, jobject, jint, jobject, jint, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView_OsrUtils
 * Method:    forwardImplF
 * Signature: (JLjava/nio/DoubleBuffer;Ljava/nio/FloatBuffer;ILjava/nio/FloatBuffer;II)I
 */
JNIEXPORT jint JNICALL Java_com_atakmap_map_opengl_GLMapView_00024OsrUtils_forwardImplF__JLjava_nio_DoubleBuffer_2Ljava_nio_FloatBuffer_2ILjava_nio_FloatBuffer_2II
  (JNIEnv *, jclass, jlong, jobject, jobject, jint, jobject, jint, jint);

/*
 * Class:     com_atakmap_map_opengl_GLMapView_OsrUtils
 * Method:    forwardImplD
 * Signature: (JLjava/nio/DoubleBuffer;Ljava/nio/DoubleBuffer;ILjava/nio/FloatBuffer;II)I
 */
JNIEXPORT jint JNICALL Java_com_atakmap_map_opengl_GLMapView_00024OsrUtils_forwardImplD__JLjava_nio_DoubleBuffer_2Ljava_nio_DoubleBuffer_2ILjava_nio_FloatBuffer_2II
  (JNIEnv *, jclass, jlong, jobject, jobject, jint, jobject, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class com_atakmap_map_opengl_GLMapView_AtmosphereControlImpl */

#ifndef _Included_com_atakmap_map_opengl_GLMapView_AtmosphereControlImpl
#define _Included_com_atakmap_map_opengl_GLMapView_AtmosphereControlImpl
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class com_atakmap_map_opengl_GLMapView_LegacyTerrainBlendControl */

#ifndef _Included_com_atakmap_map_opengl_GLMapView_LegacyTerrainBlendControl
#define _Included_com_atakmap_map_opengl_GLMapView_LegacyTerrainBlendControl
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class com_atakmap_map_opengl_GLMapView_SurfaceTerrainBlendControl */

#ifndef _Included_com_atakmap_map_opengl_GLMapView_SurfaceTerrainBlendControl
#define _Included_com_atakmap_map_opengl_GLMapView_SurfaceTerrainBlendControl
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class com_atakmap_map_opengl_GLMapView_SurfaceControlImpl */

#ifndef _Included_com_atakmap_map_opengl_GLMapView_SurfaceControlImpl
#define _Included_com_atakmap_map_opengl_GLMapView_SurfaceControlImpl
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class com_atakmap_map_opengl_GLMapView_MapMoved */

#ifndef _Included_com_atakmap_map_opengl_GLMapView_MapMoved
#define _Included_com_atakmap_map_opengl_GLMapView_MapMoved
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class com_atakmap_map_opengl_GLMapView_State */

#ifndef _Included_com_atakmap_map_opengl_GLMapView_State
#define _Included_com_atakmap_map_opengl_GLMapView_State
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class com_atakmap_map_opengl_GLMapView_ScratchPad */

#ifndef _Included_com_atakmap_map_opengl_GLMapView_ScratchPad
#define _Included_com_atakmap_map_opengl_GLMapView_ScratchPad
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class com_atakmap_map_opengl_GLMapView_ScratchPad_DepthRestore */

#ifndef _Included_com_atakmap_map_opengl_GLMapView_ScratchPad_DepthRestore
#define _Included_com_atakmap_map_opengl_GLMapView_ScratchPad_DepthRestore
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class com_atakmap_map_opengl_GLMapView_OnAnimationSettledCallback */

#ifndef _Included_com_atakmap_map_opengl_GLMapView_OnAnimationSettledCallback
#define _Included_com_atakmap_map_opengl_GLMapView_OnAnimationSettledCallback
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class com_atakmap_map_opengl_GLMapView_Animator */

#ifndef _Included_com_atakmap_map_opengl_GLMapView_Animator
#define _Included_com_atakmap_map_opengl_GLMapView_Animator
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
