/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_atakmap_database_impl_QueryImpl */

#ifndef _Included_com_atakmap_database_impl_QueryImpl
#define _Included_com_atakmap_database_impl_QueryImpl
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_atakmap_database_impl_QueryImpl
 * Method:    destruct
 * Signature: (Lcom/atakmap/interop/Pointer;)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_database_impl_QueryImpl_destruct
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_atakmap_database_impl_QueryImpl
 * Method:    reset
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_database_impl_QueryImpl_reset
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_atakmap_database_impl_QueryImpl
 * Method:    bindBinary
 * Signature: (JI[B)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_database_impl_QueryImpl_bindBinary
  (JNIEnv *, jclass, jlong, jint, jbyteArray);

/*
 * Class:     com_atakmap_database_impl_QueryImpl
 * Method:    bindInt
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_database_impl_QueryImpl_bindInt
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     com_atakmap_database_impl_QueryImpl
 * Method:    bindLong
 * Signature: (JIJ)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_database_impl_QueryImpl_bindLong
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     com_atakmap_database_impl_QueryImpl
 * Method:    bindDouble
 * Signature: (JID)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_database_impl_QueryImpl_bindDouble
  (JNIEnv *, jclass, jlong, jint, jdouble);

/*
 * Class:     com_atakmap_database_impl_QueryImpl
 * Method:    bindString
 * Signature: (JILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_database_impl_QueryImpl_bindString
  (JNIEnv *, jclass, jlong, jint, jstring);

/*
 * Class:     com_atakmap_database_impl_QueryImpl
 * Method:    bindNull
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_database_impl_QueryImpl_bindNull
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_atakmap_database_impl_QueryImpl
 * Method:    clearBindings
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_database_impl_QueryImpl_clearBindings
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_atakmap_database_impl_QueryImpl
 * Method:    getColumnIndex
 * Signature: (JLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_atakmap_database_impl_QueryImpl_getColumnIndex
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     com_atakmap_database_impl_QueryImpl
 * Method:    getColumnName
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_atakmap_database_impl_QueryImpl_getColumnName
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_atakmap_database_impl_QueryImpl
 * Method:    getColumnNames
 * Signature: (J)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_com_atakmap_database_impl_QueryImpl_getColumnNames
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_atakmap_database_impl_QueryImpl
 * Method:    getColumnCount
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_atakmap_database_impl_QueryImpl_getColumnCount
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_atakmap_database_impl_QueryImpl
 * Method:    getBlob
 * Signature: (JI)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_atakmap_database_impl_QueryImpl_getBlob
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_atakmap_database_impl_QueryImpl
 * Method:    getString
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_atakmap_database_impl_QueryImpl_getString
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_atakmap_database_impl_QueryImpl
 * Method:    getInt
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_com_atakmap_database_impl_QueryImpl_getInt
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_atakmap_database_impl_QueryImpl
 * Method:    getLong
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_com_atakmap_database_impl_QueryImpl_getLong
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_atakmap_database_impl_QueryImpl
 * Method:    getDouble
 * Signature: (JI)D
 */
JNIEXPORT jdouble JNICALL Java_com_atakmap_database_impl_QueryImpl_getDouble
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_atakmap_database_impl_QueryImpl
 * Method:    getType
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_com_atakmap_database_impl_QueryImpl_getType
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_atakmap_database_impl_QueryImpl
 * Method:    isNull
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_com_atakmap_database_impl_QueryImpl_isNull
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_atakmap_database_impl_QueryImpl
 * Method:    moveToNext
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_atakmap_database_impl_QueryImpl_moveToNext
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_atakmap_database_impl_QueryImpl
 * Method:    getFieldType_TEFTBlob
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_atakmap_database_impl_QueryImpl_getFieldType_1TEFTBlob
  (JNIEnv *, jclass);

/*
 * Class:     com_atakmap_database_impl_QueryImpl
 * Method:    getFieldType_TEFTNull
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_atakmap_database_impl_QueryImpl_getFieldType_1TEFTNull
  (JNIEnv *, jclass);

/*
 * Class:     com_atakmap_database_impl_QueryImpl
 * Method:    getFieldType_TEFTString
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_atakmap_database_impl_QueryImpl_getFieldType_1TEFTString
  (JNIEnv *, jclass);

/*
 * Class:     com_atakmap_database_impl_QueryImpl
 * Method:    getFieldType_TEFTInteger
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_atakmap_database_impl_QueryImpl_getFieldType_1TEFTInteger
  (JNIEnv *, jclass);

/*
 * Class:     com_atakmap_database_impl_QueryImpl
 * Method:    getFieldType_TEFTFloat
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_atakmap_database_impl_QueryImpl_getFieldType_1TEFTFloat
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
