/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_atakmap_map_Globe */

#ifndef _Included_com_atakmap_map_Globe
#define _Included_com_atakmap_map_Globe
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_atakmap_map_Globe
 * Method:    create
 * Signature: (IIDDD)Lcom/atakmap/interop/Pointer;
 */
JNIEXPORT jobject JNICALL Java_com_atakmap_map_Globe_create
  (JNIEnv *, jclass, jint, jint, jdouble, jdouble, jdouble);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    destruct
 * Signature: (Lcom/atakmap/interop/Pointer;)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_Globe_destruct
  (JNIEnv *, jclass, jobject);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    addLayer
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_Globe_addLayer__JJ
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    addLayer
 * Signature: (JIJ)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_Globe_addLayer__JIJ
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    setLayerPosition
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_Globe_setLayerPosition
  (JNIEnv *, jclass, jlong, jlong, jint);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    removeLayer
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_Globe_removeLayer
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    removeAllLayers
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_Globe_removeAllLayers
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    getLayer
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_com_atakmap_map_Globe_getLayer
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    getLayers
 * Signature: (J)[J
 */
JNIEXPORT jlongArray JNICALL Java_com_atakmap_map_Globe_getLayers
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    getNumLayers
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_atakmap_map_Globe_getNumLayers
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    registerNativeCallbackForwarder
 * Signature: (JLcom/atakmap/map/Globe/NativeCallbackForwarder;)Lcom/atakmap/interop/Pointer;
 */
JNIEXPORT jobject JNICALL Java_com_atakmap_map_Globe_registerNativeCallbackForwarder
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    unregisterNativeCallbackForwarder
 * Signature: (JLcom/atakmap/interop/Pointer;)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_Globe_unregisterNativeCallbackForwarder
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    getFullEquitorialExtentPixels
 * Signature: (D)D
 */
JNIEXPORT jdouble JNICALL Java_com_atakmap_map_Globe_getFullEquitorialExtentPixels
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    getDisplayDpi
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_com_atakmap_map_Globe_getDisplayDpi
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    setProjection
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_com_atakmap_map_Globe_setProjection
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    getMaxMapScale
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_com_atakmap_map_Globe_getMaxMapScale
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    getMinMapScale
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_com_atakmap_map_Globe_getMinMapScale
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    getMinLatitude
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_com_atakmap_map_Globe_getMinLatitude
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    getMaxLatitude
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_com_atakmap_map_Globe_getMaxLatitude
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    getMinLongitude
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_com_atakmap_map_Globe_getMinLongitude
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    getMaxLongitude
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_com_atakmap_map_Globe_getMaxLongitude
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    setMaxMapTilt
 * Signature: (JD)D
 */
JNIEXPORT jdouble JNICALL Java_com_atakmap_map_Globe_setMaxMapTilt
  (JNIEnv *, jclass, jlong, jdouble);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    setContinuousScrollEnabled
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_Globe_setContinuousScrollEnabled
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    isContinuousScrollEnabled
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_atakmap_map_Globe_isContinuousScrollEnabled
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    setFocusPointOffset
 * Signature: (JFF)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_Globe_setFocusPointOffset
  (JNIEnv *, jclass, jlong, jfloat, jfloat);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    setSize
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_Globe_setSize
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    getWidth
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_atakmap_map_Globe_getWidth
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    getHeight
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_atakmap_map_Globe_getHeight
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    createSceneModel
 * Signature: (J)Lcom/atakmap/interop/Pointer;
 */
JNIEXPORT jobject JNICALL Java_com_atakmap_map_Globe_createSceneModel
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    getMapResolution
 * Signature: (DD)D
 */
JNIEXPORT jdouble JNICALL Java_com_atakmap_map_Globe_getMapResolution
  (JNIEnv *, jclass, jdouble, jdouble);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    getMapScale
 * Signature: (DD)D
 */
JNIEXPORT jdouble JNICALL Java_com_atakmap_map_Globe_getMapScale
  (JNIEnv *, jclass, jdouble, jdouble);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    panTo
 * Signature: (JDDDZZ)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_Globe_panTo__JDDDZZ
  (JNIEnv *, jclass, jlong, jdouble, jdouble, jdouble, jboolean, jboolean);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    panZoomTo
 * Signature: (JDDDZDZ)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_Globe_panZoomTo
  (JNIEnv *, jclass, jlong, jdouble, jdouble, jdouble, jboolean, jdouble, jboolean);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    panZoomRotateTo
 * Signature: (JDDDZDDZ)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_Globe_panZoomRotateTo
  (JNIEnv *, jclass, jlong, jdouble, jdouble, jdouble, jboolean, jdouble, jdouble, jboolean);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    panTo
 * Signature: (JDDDZFFZ)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_Globe_panTo__JDDDZFFZ
  (JNIEnv *, jclass, jlong, jdouble, jdouble, jdouble, jboolean, jfloat, jfloat, jboolean);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    panByAtScale
 * Signature: (JFFDZ)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_Globe_panByAtScale
  (JNIEnv *, jclass, jlong, jfloat, jfloat, jdouble, jboolean);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    panBy
 * Signature: (JFFZ)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_Globe_panBy
  (JNIEnv *, jclass, jlong, jfloat, jfloat, jboolean);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    panByScaleRotate
 * Signature: (JFFDDZ)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_Globe_panByScaleRotate
  (JNIEnv *, jclass, jlong, jfloat, jfloat, jdouble, jdouble, jboolean);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    zoomTo
 * Signature: (JDZ)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_Globe_zoomTo
  (JNIEnv *, jclass, jlong, jdouble, jboolean);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    zoomBy
 * Signature: (JDFFZ)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_Globe_zoomBy
  (JNIEnv *, jclass, jlong, jdouble, jfloat, jfloat, jboolean);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    rotateTo
 * Signature: (JDZ)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_Globe_rotateTo
  (JNIEnv *, jclass, jlong, jdouble, jboolean);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    rotateBy
 * Signature: (JDFFZ)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_Globe_rotateBy__JDFFZ
  (JNIEnv *, jclass, jlong, jdouble, jfloat, jfloat, jboolean);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    tiltTo
 * Signature: (JDZ)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_Globe_tiltTo__JDZ
  (JNIEnv *, jclass, jlong, jdouble, jboolean);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    tiltTo
 * Signature: (JDDZ)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_Globe_tiltTo__JDDZ
  (JNIEnv *, jclass, jlong, jdouble, jdouble, jboolean);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    tiltBy
 * Signature: (JDFFZ)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_Globe_tiltBy__JDFFZ
  (JNIEnv *, jclass, jlong, jdouble, jfloat, jfloat, jboolean);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    tiltBy
 * Signature: (JDDDDZZ)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_Globe_tiltBy__JDDDDZZ
  (JNIEnv *, jclass, jlong, jdouble, jdouble, jdouble, jdouble, jboolean, jboolean);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    rotateBy
 * Signature: (JDDDDZZ)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_Globe_rotateBy__JDDDDZZ
  (JNIEnv *, jclass, jlong, jdouble, jdouble, jdouble, jdouble, jboolean, jboolean);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    updateBy
 * Signature: (JDDDFFZ)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_Globe_updateBy__JDDDFFZ
  (JNIEnv *, jclass, jlong, jdouble, jdouble, jdouble, jfloat, jfloat, jboolean);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    updateBy
 * Signature: (JDDDDDDZZ)V
 */
JNIEXPORT void JNICALL Java_com_atakmap_map_Globe_updateBy__JDDDDDDZZ
  (JNIEnv *, jclass, jlong, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble, jboolean, jboolean);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    getFocusPointX
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_atakmap_map_Globe_getFocusPointX
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_atakmap_map_Globe
 * Method:    getFocusPointY
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_atakmap_map_Globe_getFocusPointY
  (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class com_atakmap_map_Globe_NativeCallbackForwarder */

#ifndef _Included_com_atakmap_map_Globe_NativeCallbackForwarder
#define _Included_com_atakmap_map_Globe_NativeCallbackForwarder
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class com_atakmap_map_Globe_OnFocusPointChangedListener */

#ifndef _Included_com_atakmap_map_Globe_OnFocusPointChangedListener
#define _Included_com_atakmap_map_Globe_OnFocusPointChangedListener
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class com_atakmap_map_Globe_OnMapProjectionChangedListener */

#ifndef _Included_com_atakmap_map_Globe_OnMapProjectionChangedListener
#define _Included_com_atakmap_map_Globe_OnMapProjectionChangedListener
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class com_atakmap_map_Globe_OnMapMovedListener */

#ifndef _Included_com_atakmap_map_Globe_OnMapMovedListener
#define _Included_com_atakmap_map_Globe_OnMapMovedListener
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class com_atakmap_map_Globe_OnMapViewResizedListener */

#ifndef _Included_com_atakmap_map_Globe_OnMapViewResizedListener
#define _Included_com_atakmap_map_Globe_OnMapViewResizedListener
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class com_atakmap_map_Globe_OnContinuousScrollEnabledChangedListener */

#ifndef _Included_com_atakmap_map_Globe_OnContinuousScrollEnabledChangedListener
#define _Included_com_atakmap_map_Globe_OnContinuousScrollEnabledChangedListener
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class com_atakmap_map_Globe_OnElevationExaggerationFactorChangedListener */

#ifndef _Included_com_atakmap_map_Globe_OnElevationExaggerationFactorChangedListener
#define _Included_com_atakmap_map_Globe_OnElevationExaggerationFactorChangedListener
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class com_atakmap_map_Globe_OnLayersChangedListener */

#ifndef _Included_com_atakmap_map_Globe_OnLayersChangedListener
#define _Included_com_atakmap_map_Globe_OnLayersChangedListener
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
